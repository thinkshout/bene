// Used for settings CSS variables
// usage:
//   @include vars(background-color, color-primary-c);
// usage with arg-after:
//   @include vars(background, color-secondary-a, null, url(../images/calendar.svg) 1rem center no-repeat);
@mixin vars($property, $var, $arg-before: null, $arg-after: null) {
  #{$property}: $arg-before #{map-get($vars, $var) $arg-after};
  #{$property}: $arg-before var(--#{$var} $arg-after);
}

// Used for settings CSS variables in a linear gradient
// usage: @include gradient-vars(background, color-primary-e, color-primary-d);
// usage: @include gradient-vars(background-image, color-primary-e, color-primary-d);
@mixin gradient-vars($property, $begin, $end) {
  #{$property}: linear-gradient( #{ map-get($vars, $begin), map-get($vars, $end) } );
  #{$property}: linear-gradient( var(--#{$begin} ), var(--#{$end} ));
}

// Media queries
@mixin mq($query) {
  @media (min-width: rem($query)) {
    @content;
  }
}

//Pixels to Rem
$baseFontSizeInPixels : 16;
@function rem($pixels, $context: $baseFontSizeInPixels) {
  @if (unitless($pixels)) { $pixels: $pixels * 1px; }
  @if (unitless($context)) { $context: $context * 1px; }
  @return $pixels / $context * 1rem;
}

// Media Queries
@mixin mq($screen) {
  // Small
  @if $screen == mobile {
    @media (max-width: 414px) { @content; }
  }

  // Medium
  @if $screen == phablet {
    @media (min-width: 415px) and (max-width: 768px) { @content; }
  }

  // Large
  @if $screen == tablet {
    @media (min-width: 769px) and (max-width: 1239px) { @content; }
  }

  // Desktops
  @if $screen == desktop {
    @media (min-width: 769px) { @content; }
  }

  // Extra Large
  @if $screen == xl {
    @media (min-width: 1240px) { @content; }
  }
}
